expression = { (message | sctpad)+ }
message = { wcpad* ~ symbol ~ scpad* ~ arguments* }
arguments =
    { ("(" ~ (argument ~ (Comma ~ argument)*)* ~ ")")
    // | ("[" ~ (argument ~ (Comma ~ argument)*)* ~ "]")
    // | ("{" ~ (argument ~ (Comma ~ argument)*)* ~ "}")
    }
argument = { wcpad* ~ expression ~ wcpad* }

symbol = { number | Operator | quote | Identifier }

Identifier = _{ (!(whitespace | "(" | ")" | Terminator | number | Operator | quote) ~ ANY)+ }
Operator = { (":" | "." | "'" | "~" | "!" | "@" | "$" |
"%" | "^" | "&" | "*" | "-" | "+" | "/" | "=" | "{" | "}" |
"[" | "]" | "|" | "\\" | "<" | ">" | "?")+ }

quote = { MonoQuote | TriQuote }
MonoQuote = _{"\"" ~ (!"\"" ~ "\\\"")* ~ "\"" }
TriQuote = _{ "\"\"\"" ~ (!"\"\"\"" ~ ANY)* ~ "\"\"\"" }

Terminator = _{ (separator* ~ (";" | "\n" | "\r") ~ separator*)+ }
separator = _{ (" " | "\t" )+ }
whitespace = _{ (" " | "\r" | "\t" | "\n")+ }
sctpad = _{ separator | Comment | Terminator }
scpad = _{ separator | Comment }
wcpad = _{ whitespace | Comment }

Comment = _{ slashStarComment | slashSlashComment | poundComment }
slashStarComment = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
slashSlashComment = _{ "//" ~(!"\n" ~ ANY)* ~ "\n" }
poundComment = _{ "#" ~ (!"\n" ~ ANY)* ~ "\n" }

number = _{ Decimal | HexNumber }
HexNumber = _{ "0" ~ ("x" | "X") ~ (digit | hexLetter)+ }
hexLetter = _{ "a" | "b" | "c" | "d" | "e" | "f" }
Decimal = _{ (digits ~ "." ~ digits ~ ("e" ~ "-"? ~ digits)?) | ("." ~ digits) | digits }

Comma = _{","}
digit = _{'0' .. '9'}
digits = _{ digit+ }
